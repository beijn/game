name: ci
on:
  push:
    branches: [ main ]
  workflow_dispatch: # allows for manual invocation
env: 
  target:                                              wasm32-unknown-unknown
  imgbase: ${{ github.event.repository.name }}-builder
  image:      ghcr.io/${{ github.repository }}-builder:wasm32-unknown-unknown              
    #${{ env.imgbase }}:${{ env.target }} does not work because of env

jobs:
  builder:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }} 

      - uses: docker/build-push-action@v4
        with:  # automatically checks out git ref
          tags: ${{ env.image }}
          build-args: TARGET=${{ env.target }}
          cache-from: type=registry,ref=${{ env.image }}--cache
          cache-to:   type=registry,ref=${{ env.image }}--cache,mode=max
          push: true


  gh-pages:
    needs: builder
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/beijn/game-builder:wasm32-unknown-unknown   # env context not available
      credentials:
         username: ${{ github.actor }}
         password: ${{ github.token }}
    steps: 
    - uses: actions/checkout@v3
    - run: mv /build/target .  # IMPORTANT get the build cache (cause https://github.com/actions/checkout/pull/388)
    - name: Build for gh-pages
      run: |
        wasm-pack build --target web --out-dir dist/gh-pages --release --no-typescript
        cd dist/gh-pages && rm .gitignore README.md package.json
    - uses: peaceiris/actions-gh-pages@v3
      with:
        publish_dir: ./dist/gh-pages
        github_token: ${{ github.token }}
        force_orphan: true

  
  clean-gcr: # snok/container-retention-policy and gcr-cleaner did not work
    needs: builder
    runs-on: ubuntu-latest
    steps:
    - run: |
        ids=$(gh api /user/packages/container/${imgbase}/versions --paginate)
        ids2del=$(echo $ids | jq -r '.[] | select(.metadata.container.tags==[]) | .id')
        while read -r id; do
          echo -n | gh api --method DELETE /user/packages/container/${imgbase}/versions/${id} --input -
        done <<< $ids2del  
      env:
        GH_TOKEN: ${{ github.token }}

